<?php
/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Twilio\Rest\Numbers\V2\RegulatoryCompliance;

use Twilio\Options;
use Twilio\Values;


abstract class BundleOptions {
    /**
    * @param string $statusCallback The URL we call to inform your application of status changes. 
    * @param string $regulationSid The unique string of a regulation that is associated to the Bundle resource. 
    * @param string $isoCountry The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request. 
    * @param string $endUserType  
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;toll free&#x60;. 
    * @return CreateBundleOptions Options builder
    */
    public static function create(string  $statusCallback=Values::NONE,string  $regulationSid=Values::NONE,string  $isoCountry=Values::NONE,string  $endUserType=Values::NONE,string  $numberType=Values::NONE): CreateBundleOptions {
        return new CreateBundleOptions($statusCallback,$regulationSid,$isoCountry,$endUserType,$numberType);
    }



    /**
    * @param string $status The verification status of the Bundle resource. Please refer to [Bundle Statuses](https://www.twilio.com/docs/phone-numbers/regulatory/api/bundles#bundle-statuses) for more details. 
    * @param string $friendlyName The string that you assigned to describe the resource. The column can contain 255 variable characters. 
    * @param string $regulationSid The unique string of a [Regulation resource](https://www.twilio.com/docs/phone-numbers/regulatory/api/regulations) that is associated to the Bundle resource. 
    * @param string $isoCountry The 2-digit [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request. 
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;tollfree&#x60;. 
    * @param bool $hasValidUntilDate Indicates that the Bundle is a valid Bundle until a specified expiration date. 
    * @param string $sortBy Can be &#x60;valid-until&#x60; or &#x60;date-updated&#x60;. Defaults to &#x60;date-created&#x60;. 
    * @param string $sortDirection Default is &#x60;DESC&#x60;. Can be &#x60;ASC&#x60; or &#x60;DESC&#x60;. 
    * @param \DateTime $validUntilDate Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format. 
    * @param \DateTime $validUntilDateBefore Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format. 
    * @param \DateTime $validUntilDateAfter Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format. 
    * @return ReadBundleOptions Options builder
    */
    public static function read(string  $status=Values::NONE,string  $friendlyName=Values::NONE,string  $regulationSid=Values::NONE,string  $isoCountry=Values::NONE,string  $numberType=Values::NONE,bool  $hasValidUntilDate=Values::NONE,string  $sortBy=Values::NONE,string  $sortDirection=Values::NONE,\DateTime  $validUntilDate=Values::NONE,\DateTime  $validUntilDateBefore=Values::NONE,\DateTime  $validUntilDateAfter=Values::NONE): ReadBundleOptions {
        return new ReadBundleOptions($status,$friendlyName,$regulationSid,$isoCountry,$numberType,$hasValidUntilDate,$sortBy,$sortDirection,$validUntilDate,$validUntilDateBefore,$validUntilDateAfter);
    }

    /**
    * @param string $status  
    * @param string $statusCallback The URL we call to inform your application of status changes. 
    * @param string $friendlyName The string that you assigned to describe the resource. 
    * @param string $email The email address that will receive updates when the Bundle resource changes status. 
    * @return UpdateBundleOptions Options builder
    */
    public static function update(string  $status=Values::NONE,string  $statusCallback=Values::NONE,string  $friendlyName=Values::NONE,string  $email=Values::NONE): UpdateBundleOptions {
        return new UpdateBundleOptions($status,$statusCallback,$friendlyName,$email);
    }

}

class CreateBundleOptions extends Options {
    /**
    * @param string $statusCallback The URL we call to inform your application of status changes.
    * @param string $regulationSid The unique string of a regulation that is associated to the Bundle resource.
    * @param string $isoCountry The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request.
    * @param string $endUserType 
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;toll free&#x60;.
    */
    public function __construct(string  $statusCallback=Values::NONE,string  $regulationSid=Values::NONE,string  $isoCountry=Values::NONE,string  $endUserType=Values::NONE,string  $numberType=Values::NONE) {
        $this->options['statusCallback'] = $statusCallback;
        $this->options['regulationSid'] = $regulationSid;
        $this->options['isoCountry'] = $isoCountry;
        $this->options['endUserType'] = $endUserType;
        $this->options['numberType'] = $numberType;
    }

    /**
    * @param string $statusCallback The URL we call to inform your application of status changes.
    * @return $this Fluent Builder
    */
    public function setStatusCallback(string $statusCallback): self {
        $this->options['statusCallback'] = $statusCallback;
        return $this;
    }
    /**
    * @param string $regulationSid The unique string of a regulation that is associated to the Bundle resource.
    * @return $this Fluent Builder
    */
    public function setRegulationSid(string $regulationSid): self {
        $this->options['regulationSid'] = $regulationSid;
        return $this;
    }
    /**
    * @param string $isoCountry The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request.
    * @return $this Fluent Builder
    */
    public function setIsoCountry(string $isoCountry): self {
        $this->options['isoCountry'] = $isoCountry;
        return $this;
    }
    /**
    * @param string $endUserType 
    * @return $this Fluent Builder
    */
    public function setEndUserType(string $endUserType): self {
        $this->options['endUserType'] = $endUserType;
        return $this;
    }
    /**
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;toll free&#x60;.
    * @return $this Fluent Builder
    */
    public function setNumberType(string $numberType): self {
        $this->options['numberType'] = $numberType;
        return $this;
    }

    /**
    * Provide a friendly representation
    *
    * @return string Machine friendly representation
    */
    public function __toString(): string {
        $options = \http_build_query(Values::of($this->options), '', ' ');
        return '[Twilio.Numbers.V2.CreateBundleOptions ' . $options . ']';
    }
}



class ReadBundleOptions extends Options {
    /**
    * @param string $status The verification status of the Bundle resource. Please refer to [Bundle Statuses](https://www.twilio.com/docs/phone-numbers/regulatory/api/bundles#bundle-statuses) for more details.
    * @param string $friendlyName The string that you assigned to describe the resource. The column can contain 255 variable characters.
    * @param string $regulationSid The unique string of a [Regulation resource](https://www.twilio.com/docs/phone-numbers/regulatory/api/regulations) that is associated to the Bundle resource.
    * @param string $isoCountry The 2-digit [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request.
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;tollfree&#x60;.
    * @param bool $hasValidUntilDate Indicates that the Bundle is a valid Bundle until a specified expiration date.
    * @param string $sortBy Can be &#x60;valid-until&#x60; or &#x60;date-updated&#x60;. Defaults to &#x60;date-created&#x60;.
    * @param string $sortDirection Default is &#x60;DESC&#x60;. Can be &#x60;ASC&#x60; or &#x60;DESC&#x60;.
    * @param \DateTime $validUntilDate Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    * @param \DateTime $validUntilDateBefore Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    * @param \DateTime $validUntilDateAfter Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    */
    public function __construct(string  $status=Values::NONE,string  $friendlyName=Values::NONE,string  $regulationSid=Values::NONE,string  $isoCountry=Values::NONE,string  $numberType=Values::NONE,bool  $hasValidUntilDate=Values::NONE,string  $sortBy=Values::NONE,string  $sortDirection=Values::NONE,\DateTime  $validUntilDate=Values::NONE,\DateTime  $validUntilDateBefore=Values::NONE,\DateTime  $validUntilDateAfter=Values::NONE) {
        $this->options['status'] = $status;
        $this->options['friendlyName'] = $friendlyName;
        $this->options['regulationSid'] = $regulationSid;
        $this->options['isoCountry'] = $isoCountry;
        $this->options['numberType'] = $numberType;
        $this->options['hasValidUntilDate'] = $hasValidUntilDate;
        $this->options['sortBy'] = $sortBy;
        $this->options['sortDirection'] = $sortDirection;
        $this->options['validUntilDate'] = $validUntilDate;
        $this->options['validUntilDateBefore'] = $validUntilDateBefore;
        $this->options['validUntilDateAfter'] = $validUntilDateAfter;
    }

    /**
    * @param string $status The verification status of the Bundle resource. Please refer to [Bundle Statuses](https://www.twilio.com/docs/phone-numbers/regulatory/api/bundles#bundle-statuses) for more details.
    * @return $this Fluent Builder
    */
    public function setStatus(string $status): self {
        $this->options['status'] = $status;
        return $this;
    }
    /**
    * @param string $friendlyName The string that you assigned to describe the resource. The column can contain 255 variable characters.
    * @return $this Fluent Builder
    */
    public function setFriendlyName(string $friendlyName): self {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
    * @param string $regulationSid The unique string of a [Regulation resource](https://www.twilio.com/docs/phone-numbers/regulatory/api/regulations) that is associated to the Bundle resource.
    * @return $this Fluent Builder
    */
    public function setRegulationSid(string $regulationSid): self {
        $this->options['regulationSid'] = $regulationSid;
        return $this;
    }
    /**
    * @param string $isoCountry The 2-digit [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle&#39;s phone number country ownership request.
    * @return $this Fluent Builder
    */
    public function setIsoCountry(string $isoCountry): self {
        $this->options['isoCountry'] = $isoCountry;
        return $this;
    }
    /**
    * @param string $numberType The type of phone number of the Bundle&#39;s ownership request. Can be &#x60;local&#x60;, &#x60;mobile&#x60;, &#x60;national&#x60;, or &#x60;tollfree&#x60;.
    * @return $this Fluent Builder
    */
    public function setNumberType(string $numberType): self {
        $this->options['numberType'] = $numberType;
        return $this;
    }
    /**
    * @param bool $hasValidUntilDate Indicates that the Bundle is a valid Bundle until a specified expiration date.
    * @return $this Fluent Builder
    */
    public function setHasValidUntilDate(bool $hasValidUntilDate): self {
        $this->options['hasValidUntilDate'] = $hasValidUntilDate;
        return $this;
    }
    /**
    * @param string $sortBy Can be &#x60;valid-until&#x60; or &#x60;date-updated&#x60;. Defaults to &#x60;date-created&#x60;.
    * @return $this Fluent Builder
    */
    public function setSortBy(string $sortBy): self {
        $this->options['sortBy'] = $sortBy;
        return $this;
    }
    /**
    * @param string $sortDirection Default is &#x60;DESC&#x60;. Can be &#x60;ASC&#x60; or &#x60;DESC&#x60;.
    * @return $this Fluent Builder
    */
    public function setSortDirection(string $sortDirection): self {
        $this->options['sortDirection'] = $sortDirection;
        return $this;
    }
    /**
    * @param \DateTime $validUntilDate Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    * @return $this Fluent Builder
    */
    public function setValidUntilDate(\DateTime $validUntilDate): self {
        $this->options['validUntilDate'] = $validUntilDate;
        return $this;
    }
    /**
    * @param \DateTime $validUntilDateBefore Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    * @return $this Fluent Builder
    */
    public function setValidUntilDateBefore(\DateTime $validUntilDateBefore): self {
        $this->options['validUntilDateBefore'] = $validUntilDateBefore;
        return $this;
    }
    /**
    * @param \DateTime $validUntilDateAfter Date to filter Bundles having their &#x60;valid_until_date&#x60; before or after the specified date. Can be &#x60;ValidUntilDate&gt;&#x3D;&#x60; or &#x60;ValidUntilDate&lt;&#x3D;&#x60;. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
    * @return $this Fluent Builder
    */
    public function setValidUntilDateAfter(\DateTime $validUntilDateAfter): self {
        $this->options['validUntilDateAfter'] = $validUntilDateAfter;
        return $this;
    }

    /**
    * Provide a friendly representation
    *
    * @return string Machine friendly representation
    */
    public function __toString(): string {
        $options = \http_build_query(Values::of($this->options), '', ' ');
        return '[Twilio.Numbers.V2.ReadBundleOptions ' . $options . ']';
    }
}

class UpdateBundleOptions extends Options {
    /**
    * @param string $status 
    * @param string $statusCallback The URL we call to inform your application of status changes.
    * @param string $friendlyName The string that you assigned to describe the resource.
    * @param string $email The email address that will receive updates when the Bundle resource changes status.
    */
    public function __construct(string  $status=Values::NONE,string  $statusCallback=Values::NONE,string  $friendlyName=Values::NONE,string  $email=Values::NONE) {
        $this->options['status'] = $status;
        $this->options['statusCallback'] = $statusCallback;
        $this->options['friendlyName'] = $friendlyName;
        $this->options['email'] = $email;
    }

    /**
    * @param string $status 
    * @return $this Fluent Builder
    */
    public function setStatus(string $status): self {
        $this->options['status'] = $status;
        return $this;
    }
    /**
    * @param string $statusCallback The URL we call to inform your application of status changes.
    * @return $this Fluent Builder
    */
    public function setStatusCallback(string $statusCallback): self {
        $this->options['statusCallback'] = $statusCallback;
        return $this;
    }
    /**
    * @param string $friendlyName The string that you assigned to describe the resource.
    * @return $this Fluent Builder
    */
    public function setFriendlyName(string $friendlyName): self {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
    * @param string $email The email address that will receive updates when the Bundle resource changes status.
    * @return $this Fluent Builder
    */
    public function setEmail(string $email): self {
        $this->options['email'] = $email;
        return $this;
    }

    /**
    * Provide a friendly representation
    *
    * @return string Machine friendly representation
    */
    public function __toString(): string {
        $options = \http_build_query(Values::of($this->options), '', ' ');
        return '[Twilio.Numbers.V2.UpdateBundleOptions ' . $options . ']';
    }
}

